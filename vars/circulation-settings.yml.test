# Ansible control machine
admin_ip: 38.98.172.37 # the public IP of the machine from which you're running this playbook
git_ssh_priv_key: ~/.ssh/id_rsa

# SimplyE instance
admin_email: "dans@datalogics.com"
simplye_role: "circulation"
simplye_instance_name: "dan2-test" # e.g. "FooPublicLibrary"
simplye_environment: "production"
simplye_hostname: "cm.com" # e.g. "http://cm.library.com" or "http://111.222.333.444"; no "groups" at the end

# Note that these settings for a SIP ILS; a III/Millenium-type ILS will need to be configured manually
auth_server: ""
auth_port: "80"
auth_username: ""
auth_password: ""
auth_location: ""
auth_separator: ""

# Docker information
docker_scripts: "nypl/circ-scripts"
docker_scripts_tag : "2.0.2"
docker_deploy: "nypl/circ-deploy"
docker_deploy_tag: "2.0.2"

db_task: "ignore" # init for initial deployment, migrate for version upgrade, ignore for all other cases
# this is the value the SIMPLIFIED_DB_TASK environment variable will be set to
# normally, we'd set this to "init" for a new deployment, but automatic initialization and migration is busted

# AWS shared
aws_region: "us-west-2"

# AWS EC2
ec2_instance_type: "t2.large"
ec2_image: "ami-62d35c02"
ec2_volume_size: 32
ec2_subnet_ids: ["subnet-a05ea9f9","subnet-a05ea9f9","subnet-17e75472"] # @ToDo: automate this: http://docs.ansible.com/ansible/ec2_vpc_subnet_module.html
# until it's automated, these can be found in EC2 -> Network & Security -> Network Interfaces
# it should be a list in the form ["subnet1","subnet2","subnet3"]

# AWS RDS & PostgreSQL
rds_instance_type: "db.t2.medium"
rds_db_engine: "postgres"
rds_size: 100
rds_subnet: "default" # @ToDo: automate this: http://docs.ansible.com/ansible/ec2_vpc_subnet_module.html

psql_db_name: "circulation"
psql_username: "simplified"
psql_password: "password"

# External links
link_terms: "" # this may be referred to as terms of service or content license
link_privacy: ""

# Vendor ID
vid_id: "NYPL"
vid_url: "http://1.2.3.4/"
vid_short_name: "XXTEST"
vid_secret: "}W8>B38!:x"
